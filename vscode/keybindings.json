// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestionOnEnter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+y",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "expand_region"
    },
    {
        "key": "ctrl+shift+y",
        "command": "undo_expand_region"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k j",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+k l",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+y",
        "command": "expand_region",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-expand_region",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-markdown.showPreview",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+1",
        "command": "md-shortcut.toggleTitleH1",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+2",
        "command": "md-shortcut.toggleTitleH2",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+3",
        "command": "md-shortcut.toggleTitleH3",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+4",
        "command": "md-shortcut.toggleTitleH4",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+5",
        "command": "md-shortcut.toggleTitleH5",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "-markdown-preview-enhanced.runAllCodeChunks",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "alt+;",
        "command": "comment.makeLineComment",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "-comment.makeLineComment",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+i",
        "command": "cursorUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "cursorLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+k",
        "command": "cursorDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "cursorUpSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "cursorLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "cursorDownSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "cursorRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "cursorWordEndLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "cursorWordEndRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "cursorWordEndLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+u",
        "command": "cursorHome",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+o",
        "command": "cursorEnd",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+u",
        "command": "cursorTop",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+o",
        "command": "cursorBottom",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+u",
        "command": "cursorTopSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+o",
        "command": "cursorBottomSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+u",
        "command": "cursorHomeSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+o",
        "command": "cursorEndSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    }
]
